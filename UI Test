---------------------------------------------------
-- ðŸ§± UI SCRIPT â€“ Roblox UO Style Menu (Fixed Toggle + Smooth Animated Tooltips)
---------------------------------------------------
local TweenService = game:GetService("TweenService")
local TextService = game:GetService("TextService")
local RunService = game:GetService("RunService")
local Player = game.Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- Screen GUI
local gui = Instance.new("ScreenGui")
gui.Name = "UOStyledUI"
gui.ResetOnSpawn = false
gui.Parent = PlayerGui

-- Toggle button (clipboard icon)
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 32, 0, 32)
toggleBtn.Position = UDim2.new(1, -10, 0, 10)
toggleBtn.AnchorPoint = Vector2.new(1, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
toggleBtn.BackgroundTransparency = 0.25
toggleBtn.Text = ""
toggleBtn.ZIndex = 50
toggleBtn.Parent = gui
Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(0, 6)
local toggleScale = Instance.new("UIScale", toggleBtn)

local icon = Instance.new("ImageLabel")
icon.Size = UDim2.new(0.6, 0, 0.6, 0)
icon.Position = UDim2.new(0.2, 0, 0.2, 0)
icon.BackgroundTransparency = 1
icon.Image = "rbxassetid://6023426915"
icon.ZIndex = 51
icon.Parent = toggleBtn

toggleBtn.MouseEnter:Connect(function()
	TweenService:Create(toggleBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(90, 90, 110)}):Play()
end)
toggleBtn.MouseLeave:Connect(function()
	TweenService:Create(toggleBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(70, 70, 90)}):Play()
end)
toggleBtn.MouseButton1Down:Connect(function()
	TweenService:Create(toggleScale, TweenInfo.new(0.1), {Scale = 0.95}):Play()
end)
toggleBtn.MouseButton1Up:Connect(function()
	TweenService:Create(toggleScale, TweenInfo.new(0.1), {Scale = 1}):Play()
end)

-- Menu frame
local menu = Instance.new("Frame")
menu.Size = UDim2.new(0, 210, 0, 300)
menu.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
menu.BackgroundTransparency = 0.35
menu.Visible = false
menu.Active = true
menu.Draggable = true
menu.ZIndex = 10
menu.Parent = gui
Instance.new("UICorner", menu).CornerRadius = UDim.new(0, 12)

-- Drop shadow
local shadow = Instance.new("Frame")
shadow.Size = menu.Size
shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadow.BackgroundTransparency = 0.7
shadow.ZIndex = 5
shadow.Visible = false
shadow.Parent = gui
Instance.new("UICorner", shadow).CornerRadius = UDim.new(0, 12)

menu:GetPropertyChangedSignal("Position"):Connect(function()
	shadow.Position = menu.Position + UDim2.new(0, 2, 0, 2)
end)
menu:GetPropertyChangedSignal("Size"):Connect(function()
	shadow.Size = menu.Size
end)

-- Position menu below toggle button, shifted left
local LEFT_OFFSET = 170
local function updateMenuPosition()
	local absPos = toggleBtn.AbsolutePosition
	local absSize = toggleBtn.AbsoluteSize
	menu.Position = UDim2.new(0, absPos.X - LEFT_OFFSET, 0, absPos.Y + absSize.Y + 5)
end
updateMenuPosition()
toggleBtn:GetPropertyChangedSignal("Position"):Connect(updateMenuPosition)

-- Title bar
local titleBar = Instance.new("TextLabel")
titleBar.Size = UDim2.new(1, 0, 0, 28)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
titleBar.BackgroundTransparency = 0.25
titleBar.Text = "BRD SCRIPTS"
titleBar.TextColor3 = Color3.new(1, 1, 1)
titleBar.TextSize = 16
titleBar.Font = Enum.Font.GothamBold
titleBar.ZIndex = 11
titleBar.Parent = menu
Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 12)

-- Search box
local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1, -20, 0, 25)
searchBox.Position = UDim2.new(0, 10, 0, 40)
searchBox.PlaceholderText = "Search..."
searchBox.TextColor3 = Color3.new(1, 1, 1)
searchBox.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
searchBox.BackgroundTransparency = 0.4
searchBox.TextSize = 14
searchBox.Font = Enum.Font.Gotham
searchBox.ZIndex = 11
searchBox.Parent = menu
Instance.new("UICorner", searchBox).CornerRadius = UDim.new(0, 8)

-- Scroll frame
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Position = UDim2.new(0, 10, 0, 70)
scrollFrame.Size = UDim2.new(1, -20, 1, -80)
scrollFrame.BackgroundTransparency = 1
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.ScrollBarThickness = 6
scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 120)
scrollFrame.ZIndex = 11
scrollFrame.Parent = menu

local listLayout = Instance.new("UIListLayout", scrollFrame)
listLayout.Padding = UDim.new(0, 6)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder

listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y)
end)

-- Button labels, descriptions, and functions
local buttonLabels = {
	"Infinite Yield","Shaders", "Baseplate"
}
local buttonDescriptions = {
	"Executes Infinite Yield Script","Shader Toggle", "Extended Baseplae Toggle"
}
local buttonFunctions = {
	function() loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))() end,
    function() loadstring(game:HttpGet("https://raw.githubusercontent.com/bluevsgreenmodz-ctrl/brd_scripts/refs/heads/main/Shaders"))() end,
    function() loadstring(game:HttpGet("https://raw.githubusercontent.com/bluevsgreenmodz-ctrl/brd_scripts/refs/heads/main/baseplate"))() end
}

-- Tooltip (follows mouse, smoothly animates size)
local tooltip = Instance.new("TextLabel")
tooltip.Size = UDim2.new(0, 100, 0, 24) -- initial
tooltip.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
tooltip.BackgroundTransparency = 0.4
tooltip.TextColor3 = Color3.new(1, 1, 1)
tooltip.TextSize = 14
tooltip.Font = Enum.Font.Gotham
tooltip.Visible = false
tooltip.ZIndex = 20
tooltip.Parent = gui
Instance.new("UICorner", tooltip).CornerRadius = UDim.new(0, 6)

-- Smooth tooltip position
RunService.RenderStepped:Connect(function()
	if tooltip.Visible then
		local mouse = Player:GetMouse()
		local newX = math.min(mouse.X + 15, workspace.CurrentCamera.ViewportSize.X - tooltip.Size.X.Offset)
		local newY = math.min(mouse.Y + 15, workspace.CurrentCamera.ViewportSize.Y - tooltip.Size.Y.Offset)
		tooltip.Position = UDim2.new(0, newX, 0, newY)
	end
end)

-- Function to update tooltip text and smoothly resize
local function updateTooltipText(text)
	tooltip.Text = text
	tooltip.Visible = true

	local textSize = TextService:GetTextSize(
		text,
		tooltip.TextSize,
		tooltip.Font,
		Vector2.new(1000, math.huge)
	)

	local newWidth = math.clamp(textSize.X + 10, 80, 300)
	local newHeight = math.clamp(textSize.Y + 6, 20, 100)

	local tweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	TweenService:Create(tooltip, tweenInfo, {Size = UDim2.new(0, newWidth, 0, newHeight)}):Play()
end

-- Create buttons
local buttons = {}
for i = 1, 3 do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -20, 0, 28)
	btn.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
	btn.BackgroundTransparency = 0.25
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Text = buttonLabels[i]
	btn.TextSize = 14
	btn.Font = Enum.Font.Gotham
	btn.ZIndex = 12
	btn.Parent = scrollFrame
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
	local scale = Instance.new("UIScale", btn)

	btn.MouseEnter:Connect(function()
		TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(90, 90, 110)}):Play()
		updateTooltipText(buttonDescriptions[i])
	end)
	btn.MouseLeave:Connect(function()
		TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(70, 70, 90)}):Play()
		tooltip.Visible = false
	end)

	btn.MouseButton1Down:Connect(function()
		TweenService:Create(scale, TweenInfo.new(0.1), {Scale = 0.95}):Play()
	end)
	btn.MouseButton1Up:Connect(function()
		TweenService:Create(scale, TweenInfo.new(0.1), {Scale = 1}):Play()
	end)

	btn.MouseButton1Click:Connect(function()
		if buttonFunctions[i] then
			buttonFunctions[i]()
		end
	end)

	table.insert(buttons, btn)
end

-- Minimize & Close buttons
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 24, 0, 24)
minimizeBtn.Position = UDim2.new(1, -50, 0, 2)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
minimizeBtn.BackgroundTransparency = 0.25
minimizeBtn.Text = "â€“"
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
minimizeBtn.TextSize = 16
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.ZIndex = 12
minimizeBtn.Parent = titleBar
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(0, 6)

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -25, 0, 2)
closeBtn.BackgroundColor3 = Color3.fromRGB(90, 60, 60)
closeBtn.BackgroundTransparency = 0.25
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextSize = 16
closeBtn.Font = Enum.Font.GothamBold
closeBtn.ZIndex = 12
closeBtn.Parent = titleBar
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 6)

-- Fade & toggle logic
local uiVisible = false
local FADE_TIME_MENU = 0.2
local FADE_TIME_ELEMENTS = 0.1

local function setMenuVisible(visible)
	if visible then
		menu.Visible = true
		shadow.Visible = true
		searchBox.Visible = true
		scrollFrame.Visible = true

		menu.BackgroundTransparency = 1
		shadow.BackgroundTransparency = 1
		titleBar.BackgroundTransparency = 1
		titleBar.TextTransparency = 1
		searchBox.BackgroundTransparency = 1
		searchBox.TextTransparency = 1
		scrollFrame.ScrollBarImageTransparency = 1
		minimizeBtn.BackgroundTransparency = 1
		minimizeBtn.TextTransparency = 1
		closeBtn.BackgroundTransparency = 1
		closeBtn.TextTransparency = 1
		for _, btn in ipairs(buttons) do
			btn.BackgroundTransparency = 1
			btn.TextTransparency = 1
		end

		TweenService:Create(menu, TweenInfo.new(FADE_TIME_MENU), {BackgroundTransparency = 0.35}):Play()
		TweenService:Create(shadow, TweenInfo.new(FADE_TIME_MENU), {BackgroundTransparency = 0.7}):Play()
		TweenService:Create(titleBar, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 0.25, TextTransparency = 0}):Play()
		TweenService:Create(searchBox, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 0.4, TextTransparency = 0}):Play()
		TweenService:Create(scrollFrame, TweenInfo.new(FADE_TIME_ELEMENTS), {ScrollBarImageTransparency = 0}):Play()
		TweenService:Create(minimizeBtn, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 0.25, TextTransparency = 0}):Play()
		TweenService:Create(closeBtn, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 0.25, TextTransparency = 0}):Play()
		for _, btn in ipairs(buttons) do
			TweenService:Create(btn, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 0.25, TextTransparency = 0}):Play()
		end
	else
		TweenService:Create(menu, TweenInfo.new(FADE_TIME_MENU), {BackgroundTransparency = 1}):Play()
		TweenService:Create(shadow, TweenInfo.new(FADE_TIME_MENU), {BackgroundTransparency = 1}):Play()
		TweenService:Create(titleBar, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 1, TextTransparency = 1}):Play()
		TweenService:Create(searchBox, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 1, TextTransparency = 1}):Play()
		TweenService:Create(scrollFrame, TweenInfo.new(FADE_TIME_ELEMENTS), {ScrollBarImageTransparency = 1}):Play()
		TweenService:Create(minimizeBtn, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 1, TextTransparency = 1}):Play()
		TweenService:Create(closeBtn, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 1, TextTransparency = 1}):Play()
		for _, btn in ipairs(buttons) do
			TweenService:Create(btn, TweenInfo.new(FADE_TIME_ELEMENTS), {BackgroundTransparency = 1, TextTransparency = 1}):Play()
		end

		local hideConnection
		hideConnection = TweenService:Create(menu, TweenInfo.new(FADE_TIME_MENU), {BackgroundTransparency = 1}).Completed:Connect(function()
			menu.Visible = false
			shadow.Visible = false
			scrollFrame.Visible = false
			hideConnection:Disconnect()
		end)
	end
end

-- Toggle button
toggleBtn.MouseButton1Click:Connect(function()
	uiVisible = not uiVisible
	setMenuVisible(uiVisible)
end)

-- Close button
closeBtn.MouseButton1Click:Connect(function()
	if uiVisible then
		uiVisible = false
		setMenuVisible(false)
	end
end)

-- Minimize logic
local minimized = false
local TWEEN_DURATION = 0.2
local function tweenMenu(targetHeight)
	local tweenInfo = TweenInfo.new(TWEEN_DURATION, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	TweenService:Create(menu, tweenInfo, {Size = UDim2.new(0, 210, 0, targetHeight)}):Play()
end

minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		scrollFrame.Visible = false
		searchBox.Visible = false
		minimizeBtn.Text = "+"
		tweenMenu(30)
	else
		scrollFrame.Visible = true
		searchBox.Visible = true
		minimizeBtn.Text = "â€“"
		tweenMenu(300)
	end
end)

-- Search function
searchBox:GetPropertyChangedSignal("Text"):Connect(function()
	local query = searchBox.Text:lower()
	for _, btn in ipairs(buttons) do
		btn.Visible = query == "" or btn.Text:lower():find(query)
	end
	-- Move remaining buttons to top
	local visibleButtons = {}
	for _, btn in ipairs(buttons) do
		if btn.Visible then table.insert(visibleButtons, btn) end
	end
	for _, btn in ipairs(visibleButtons) do
		btn.Parent = nil
		btn.Parent = scrollFrame
	end
end)
